---
layout: post
title: 雪花分形，一次从前到后的尝试
date: 2017-03-07 00:06:50
description: 写写我在做雪花分形应用时遇到了什么事
categories: tech
---

**缘起**

很久之前，我写下一篇介绍“雪花分形”写作理论的文章，在那之后，我觉得可以做一个让人方便地用上这个理论写作的工具，甚至一度幻想着可以靠它提供的服务来赚点钱。

**选型**

> 一个刚启动的项目，做成网页的形式最快收获用户。

我打算先做一个原型。原型的话，网页是最容易做的。在技术选型时我不想依靠思维惯性，抓起身边的 Bootstrap 和 jQuery 撸起袖子就是干，这样多没意思啊。

这时听说 vue 出 2.0 ，虽然没怎么用过 vue ，要不试着用一用？将来也好说自己用过 vue 2.0 嘛 =w= 于是，开始一边看着文档，一边敲代码。

*在工作中，这样的选型思路非常危险哦，除非是玩票项目且完全不在乎成败，又想任性一把*

**踩坑**

- 模块化

雪花分形有十一个步骤，大体分为两条线：剧情和人物。随着步骤的进展，剧情和人物都在之前步骤的基础上逐渐清晰丰满。

用两大类组件来展示这些步骤，可以复用很多代码。话虽如此，作为组件骨架的 `html` 却没少写。

vue 文档里的一个坑就是在介绍组件时没同时展示一种很方便的模板语法。文档中一个例子：

```
Vue.component('my-component', {
  template: '<div>A custom component!</div>'
  // 这里的 template 很简单，如果 template 是一大堆的 html ，写起来很累，读起来也很累
})
```

我用字符串拼接的形式写了两个组件的 `html` 之后，太难受，终于忍不住要找点别的写法。但不想引入 es6 的语法（要搭环境、配置、预先编译一道什么的太麻烦）。最理想的是 vue 原生支持的语法，还真找到了：

```
<script type="text/x-template" id="component-id">
  <div>A custom component!</div>
</script>

<script>
  Vue.component('my-component', {
    template: '#component-id'
  })
</script>
```

- 驼峰与烤串


**加个后台吧**

**后记**